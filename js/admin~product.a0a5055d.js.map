{"version":3,"sources":["webpack:///../../../src/mixins/overlayable/index.ts","webpack:///../../../src/components/VDialog/VDialog.ts","webpack:///../../../src/components/VOverlay/index.ts","webpack:///../../../src/components/VForm/VForm.ts","webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/components/VOverlay/VOverlay.ts","webpack:///../../../src/components/VTextarea/VTextarea.ts"],"names":["name","props","hideOverlay","overlayColor","overlayOpacity","Number","String","data","animationFrame","overlay","watch","this","genOverlay","beforeDestroy","methods","createOverlay","VOverlay","propsData","absolute","value","color","opacity","parent","$el","document","requestAnimationFrame","removeOverlay","showScroll","cancelAnimationFrame","scrollListener","e","includes","up","down","checkPath","hasScrollbar","el","Node","style","window","shouldScroll","dir","delta","alreadyAtStart","alreadyAtEnd","scrollingUp","scrollingDown","isInside","path","dialog","$refs","selected","index","hideScroll","$vuetify","breakpoint","passive","baseMixins","mixins","directives","ClickOutside","dark","disabled","fullscreen","light","maxWidth","noClickAnimation","origin","type","default","persistent","retainFocus","scrollable","transition","width","activatedBy","animate","animateTimeout","isActive","stackMinZIndex","previousActiveElement","computed","classes","contentClasses","hasActivator","Boolean","$slots","$scopedSlots","created","$attrs","hasOwnProperty","beforeMount","unbind","animateClick","closeConditional","target","_isDestroyed","content","contains","activeZIndex","show","bind","onClickOutside","onKeydown","getOpenDependents","activator","onFocusin","getOpenDependentElements","some","focusable","querySelectorAll","genContent","showLazyContent","root","class","attrs","role","tabindex","on","keydown","zIndex","ref","genTransition","$createElement","appear","genInnerContent","handler","include","transformOrigin","render","h","staticClass","attach","provide","form","inheritAttrs","lazyValidation","readonly","inputs","watchers","errorBag","errors","Object","deep","immediate","watchInput","watcher","input","val","_uid","valid","shouldValidate","validate","filter","reset","resetErrorBag","setTimeout","resetValidation","register","unregister","found","find","i","unwatch","novalidate","attrs$","submit","ripple","genRipple","center","__scrim","setBackgroundColor","computedOpacity","themeClasses","styles","children","autoGrow","noResize","rowHeight","validator","v","isNaN","parseFloat","rows","parseInt","noResizeHandle","lazyValue","$nextTick","mounted","calculateInputHeight","height","minHeight","Math","genInput","onInput","onKeyDown","isFocused"],"mappings":"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","file":"js/admin~product.a0a5055d.js","sourcesContent":["// Components\nimport VOverlay from '../../components/VOverlay'\n\n// Utilities\nimport {\n  keyCodes,\n  addOnceEventListener,\n  addPassiveEventListener,\n  getZIndex,\n  composedPath,\n} from '../../util/helpers'\n\n// Types\nimport Vue from 'vue'\n\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\ninterface Stackable extends Vue {\n  activeZIndex: number\n}\n\ninterface options {\n  absolute?: boolean\n  $refs: {\n    dialog?: HTMLElement\n    content?: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable & Stackable & options>().extend({\n  name: 'overlayable',\n\n  props: {\n    hideOverlay: Boolean,\n    overlayColor: String,\n    overlayOpacity: [Number, String],\n  },\n\n  data () {\n    return {\n      animationFrame: 0,\n      overlay: null as InstanceType<typeof VOverlay> | null,\n    }\n  },\n\n  watch: {\n    hideOverlay (value) {\n      if (!this.isActive) return\n\n      if (value) this.removeOverlay()\n      else this.genOverlay()\n    },\n  },\n\n  beforeDestroy () {\n    this.removeOverlay()\n  },\n\n  methods: {\n    createOverlay () {\n      const overlay = new VOverlay({\n        propsData: {\n          absolute: this.absolute,\n          value: false,\n          color: this.overlayColor,\n          opacity: this.overlayOpacity,\n        },\n      })\n\n      overlay.$mount()\n\n      const parent = this.absolute\n        ? this.$el.parentNode\n        : document.querySelector('[data-app]')\n\n      parent && parent.insertBefore(overlay.$el, parent.firstChild)\n\n      this.overlay = overlay\n    },\n    genOverlay () {\n      this.hideScroll()\n\n      if (this.hideOverlay) return\n\n      if (!this.overlay) this.createOverlay()\n\n      this.animationFrame = requestAnimationFrame(() => {\n        if (!this.overlay) return\n\n        if (this.activeZIndex !== undefined) {\n          this.overlay.zIndex = String(this.activeZIndex - 1)\n        } else if (this.$el) {\n          this.overlay.zIndex = getZIndex(this.$el)\n        }\n\n        this.overlay.value = true\n      })\n\n      return true\n    },\n    /** removeOverlay(false) will not restore the scollbar afterwards */\n    removeOverlay (showScroll = true) {\n      if (this.overlay) {\n        addOnceEventListener(this.overlay.$el, 'transitionend', () => {\n          if (\n            !this.overlay ||\n            !this.overlay.$el ||\n            !this.overlay.$el.parentNode ||\n            this.overlay.value ||\n            this.isActive\n          ) return\n\n          this.overlay.$el.parentNode.removeChild(this.overlay.$el)\n          this.overlay.$destroy()\n          this.overlay = null\n        })\n\n        // Cancel animation frame in case\n        // overlay is removed before it\n        // has finished its animation\n        cancelAnimationFrame(this.animationFrame)\n\n        this.overlay.value = false\n      }\n\n      showScroll && this.showScroll()\n    },\n    scrollListener (e: WheelEvent & KeyboardEvent) {\n      if (e.type === 'keydown') {\n        if (\n          ['INPUT', 'TEXTAREA', 'SELECT'].includes((e.target as Element).tagName) ||\n          // https://github.com/vuetifyjs/vuetify/issues/4715\n          (e.target as HTMLElement).isContentEditable\n        ) return\n\n        const up = [keyCodes.up, keyCodes.pageup]\n        const down = [keyCodes.down, keyCodes.pagedown]\n\n        if (up.includes(e.keyCode)) {\n          (e as any).deltaY = -1\n        } else if (down.includes(e.keyCode)) {\n          (e as any).deltaY = 1\n        } else {\n          return\n        }\n      }\n\n      if (e.target === this.overlay ||\n        (e.type !== 'keydown' && e.target === document.body) ||\n        this.checkPath(e)) e.preventDefault()\n    },\n    hasScrollbar (el?: Element) {\n      if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n      const style = window.getComputedStyle(el)\n      return ((['auto', 'scroll'].includes(style.overflowY!) || el.tagName === 'SELECT') && el.scrollHeight > el.clientHeight) ||\n      ((['auto', 'scroll'].includes(style.overflowX!)) && el.scrollWidth > el.clientWidth)\n    },\n    shouldScroll (el: Element, e: WheelEvent): boolean {\n      if (el.hasAttribute('data-app')) return false\n\n      const dir = e.shiftKey || e.deltaX ? 'x' : 'y'\n      const delta = dir === 'y' ? e.deltaY : e.deltaX || e.deltaY\n\n      let alreadyAtStart: boolean\n      let alreadyAtEnd: boolean\n      if (dir === 'y') {\n        alreadyAtStart = el.scrollTop === 0\n        alreadyAtEnd = el.scrollTop + el.clientHeight === el.scrollHeight\n      } else {\n        alreadyAtStart = el.scrollLeft === 0\n        alreadyAtEnd = el.scrollLeft + el.clientWidth === el.scrollWidth\n      }\n\n      const scrollingUp = delta < 0\n      const scrollingDown = delta > 0\n\n      if (!alreadyAtStart && scrollingUp) return true\n      if (!alreadyAtEnd && scrollingDown) return true\n      if ((alreadyAtStart || alreadyAtEnd)) {\n        return this.shouldScroll(el.parentNode as Element, e)\n      }\n\n      return false\n    },\n    isInside (el: Element, parent: Element): boolean {\n      if (el === parent) {\n        return true\n      } else if (el === null || el === document.body) {\n        return false\n      } else {\n        return this.isInside(el.parentNode as Element, parent)\n      }\n    },\n    checkPath (e: WheelEvent) {\n      const path = composedPath(e)\n\n      if (e.type === 'keydown' && path[0] === document.body) {\n        const dialog = this.$refs.dialog\n        // getSelection returns null in firefox in some edge cases, can be ignored\n        const selected = window.getSelection()!.anchorNode as Element\n        if (dialog && this.hasScrollbar(dialog) && this.isInside(selected, dialog)) {\n          return !this.shouldScroll(dialog, e)\n        }\n        return true\n      }\n\n      for (let index = 0; index < path.length; index++) {\n        const el = path[index]\n\n        if (el === document) return true\n        if (el === document.documentElement) return true\n        if (el === this.$refs.content) return true\n\n        if (this.hasScrollbar(el as Element)) return !this.shouldScroll(el as Element, e)\n      }\n\n      return true\n    },\n    hideScroll () {\n      if (this.$vuetify.breakpoint.smAndDown) {\n        document.documentElement!.classList.add('overflow-y-hidden')\n      } else {\n        addPassiveEventListener(window, 'wheel', this.scrollListener as EventHandlerNonNull, { passive: false })\n        window.addEventListener('keydown', this.scrollListener as EventHandlerNonNull)\n      }\n    },\n    showScroll () {\n      document.documentElement!.classList.remove('overflow-y-hidden')\n      window.removeEventListener('wheel', this.scrollListener as EventHandlerNonNull)\n      window.removeEventListener('keydown', this.scrollListener as EventHandlerNonNull)\n    },\n  },\n})\n","// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Overlayable from '../../mixins/overlayable'\nimport Returnable from '../../mixins/returnable'\nimport Stackable from '../../mixins/stackable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Activatable,\n  Dependent,\n  Detachable,\n  Overlayable,\n  Returnable,\n  Stackable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-dialog',\n\n  directives: { ClickOutside },\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: [String, Number],\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition',\n    },\n    width: [String, Number],\n  },\n\n  data () {\n    return {\n      activatedBy: null as EventTarget | null,\n      animate: false,\n      animateTimeout: -1,\n      isActive: !!this.value,\n      stackMinZIndex: 200,\n      previousActiveElement: null as HTMLElement | null,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        [(`v-dialog ${this.contentClass}`).trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate,\n      }\n    },\n    contentClasses (): object {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive,\n      }\n    },\n    hasActivator (): boolean {\n      return Boolean(\n        !!this.$slots.activator ||\n        !!this.$scopedSlots.activator\n      )\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.show()\n        this.hideScroll()\n      } else {\n        this.removeOverlay()\n        this.unbind()\n        this.previousActiveElement?.focus()\n      }\n    },\n    fullscreen (val) {\n      if (!this.isActive) return\n\n      if (val) {\n        this.hideScroll()\n        this.removeOverlay(false)\n      } else {\n        this.showScroll()\n        this.genOverlay()\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive\n      this.isActive && this.show()\n    })\n  },\n\n  beforeDestroy () {\n    if (typeof window !== 'undefined') this.unbind()\n  },\n\n  methods: {\n    animateClick () {\n      this.animate = false\n      // Needed for when clicking very fast\n      // outside of the dialog\n      this.$nextTick(() => {\n        this.animate = true\n        window.clearTimeout(this.animateTimeout)\n        this.animateTimeout = window.setTimeout(() => (this.animate = false), 150)\n      })\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n      // Ignore the click if the dialog is closed or destroyed,\n      // if it was on an element inside the content,\n      // if it was dragged onto the overlay (#6969),\n      // or if this isn't the topmost dialog (#9907)\n      return !(\n        this._isDestroyed ||\n        !this.isActive ||\n        this.$refs.content.contains(target) ||\n        (this.overlay && target && !this.overlay.$el.contains(target))\n      ) && this.activeZIndex >= this.getMaxZIndex()\n    },\n    hideScroll () {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden')\n      } else {\n        Overlayable.options.methods.hideScroll.call(this)\n      }\n    },\n    show () {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay()\n      // Double nextTick to wait for lazy content to be generated\n      this.$nextTick(() => {\n        this.$nextTick(() => {\n          if (!this.$refs.content.contains(document.activeElement)) {\n            this.previousActiveElement = document.activeElement as HTMLElement\n            this.$refs.content.focus()\n          }\n          this.bind()\n        })\n      })\n    },\n    bind () {\n      window.addEventListener('focusin', this.onFocusin)\n    },\n    unbind () {\n      window.removeEventListener('focusin', this.onFocusin)\n    },\n    onClickOutside (e: Event) {\n      this.$emit('click:outside', e)\n\n      if (this.persistent) {\n        this.noClickAnimation || this.animateClick()\n      } else {\n        this.isActive = false\n      }\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false\n          const activator = this.getActivator()\n          this.$nextTick(() => activator && (activator as HTMLElement).focus())\n        } else if (!this.noClickAnimation) {\n          this.animateClick()\n        }\n      }\n      this.$emit('keydown', e)\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin (e: Event) {\n      if (!e || !this.retainFocus) return\n\n      const target = e.target as HTMLElement\n\n      if (\n        !!target &&\n        // It isn't the document or the dialog body\n        ![document, this.$refs.content].includes(target) &&\n        // It isn't inside the dialog body\n        !this.$refs.content.contains(target) &&\n        // We're the topmost dialog\n        this.activeZIndex >= this.getMaxZIndex() &&\n        // It isn't inside a dependent element (like a menu)\n        !this.getOpenDependentElements().some(el => el.contains(target))\n        // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        const focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n        const el = [...focusable].find(el => !el.hasAttribute('disabled')) as HTMLElement | undefined\n        el && el.focus()\n      }\n    },\n    genContent () {\n      return this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [\n          this.$createElement('div', {\n            class: this.contentClasses,\n            attrs: {\n              role: 'document',\n              tabindex: this.isActive ? 0 : undefined,\n              ...this.getScopeIdAttrs(),\n            },\n            on: { keydown: this.onKeydown },\n            style: { zIndex: this.activeZIndex },\n            ref: 'content',\n          }, [this.genTransition()]),\n        ]),\n      ])\n    },\n    genTransition () {\n      const content = this.genInnerContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          appear: true,\n        },\n      }, [content])\n    },\n    genInnerContent () {\n      const data: VNodeData = {\n        class: this.classes,\n        ref: 'dialog',\n        directives: [\n          {\n            name: 'click-outside',\n            value: {\n              handler: this.onClickOutside,\n              closeConditional: this.closeConditional,\n              include: this.getOpenDependentElements,\n            },\n          },\n          { name: 'show', value: this.isActive },\n        ],\n        style: {\n          transformOrigin: this.origin,\n        },\n      }\n\n      if (!this.fullscreen) {\n        data.style = {\n          ...data.style as object,\n          maxWidth: convertToUnit(this.maxWidth),\n          width: convertToUnit(this.width),\n        }\n      }\n\n      return this.$createElement('div', data, this.getContentSlot())\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      attrs: { role: 'dialog' },\n    }, [\n      this.genActivator(),\n      this.genContent(),\n    ])\n  },\n})\n","import VOverlay from './VOverlay'\n\nexport { VOverlay }\n\nexport default VOverlay\n","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n\n      return this.$createElement('div', data)\n    },\n  },\n})\n","// Styles\nimport './VOverlay.sass'\n\n// Mixins\nimport Colorable from './../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport Toggleable from './../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Themeable,\n  Toggleable\n).extend({\n  name: 'v-overlay',\n\n  props: {\n    absolute: Boolean,\n    color: {\n      type: String,\n      default: '#212121',\n    },\n    dark: {\n      type: Boolean,\n      default: true,\n    },\n    opacity: {\n      type: [Number, String],\n      default: 0.46,\n    },\n    value: {\n      default: true,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: 5,\n    },\n  },\n\n  computed: {\n    __scrim (): VNode {\n      const data = this.setBackgroundColor(this.color, {\n        staticClass: 'v-overlay__scrim',\n        style: {\n          opacity: this.computedOpacity,\n        },\n      })\n\n      return this.$createElement('div', data)\n    },\n    classes (): object {\n      return {\n        'v-overlay--absolute': this.absolute,\n        'v-overlay--active': this.isActive,\n        ...this.themeClasses,\n      }\n    },\n    computedOpacity (): number {\n      return Number(this.isActive ? this.opacity : 0)\n    },\n    styles (): object {\n      return {\n        zIndex: this.zIndex,\n      }\n    },\n  },\n\n  methods: {\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-overlay__content',\n      }, this.$slots.default)\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.__scrim]\n\n    if (this.isActive) children.push(this.genContent())\n\n    return h('div', {\n      staticClass: 'v-overlay',\n      on: this.$listeners,\n      class: this.classes,\n      style: this.styles,\n    }, children)\n  },\n})\n","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    autoGrow (val: boolean) {\n      this.$nextTick(() => {\n        val\n          ? this.calculateInputHeight()\n          : this.$refs.input?.style.removeProperty('height')\n      })\n    },\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n"],"sourceRoot":""}